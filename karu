
<!DOCTYPE html>
<html lang="en">
	<head>
		<title>three.js webgl - geometry - cube</title>
		<meta charset="utf-8">
		<style>
			body {
				margin: 0px;
				background-color: #000000;
				overflow: hidden;
			}
		</style>
	</head>
	<body>

		<script src="three.js/build/three.min.js"></script>
		<script src="three.js/build/three.js"></script>
<!-- 		<script src="three.js/src/renderers/WebGLRenderer.js"></script>
		<script src="three.js/src/materials/MeshBasicMaterial.js"></script>
		<script src="three.js/src/loaders/MaterialLoader.js"></script>
		<script src="three.js/src/textures/Texture.js"></script>
		<script src="three.js/src/loaders/TextureLoader.js"></script> -->
		<script>

			var camera, scene, renderer;
			var cube;

			init();
			animate();

			function init() {
				// Scene
				scene = new THREE.Scene();


				// Camera
				camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
				camera.position.z = 400;


				// Renderer
				renderer = new THREE.WebGLRenderer();
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( window.innerWidth, window.innerHeight );
				document.body.appendChild( renderer.domElement );


				// Events
				window.addEventListener( 'resize', onWindowResize, false );
				window.addEventListener( 'keydown', keyDownHandler, false);


				// Cube
				var geometry = new THREE.BoxGeometry( 100, 100, 100 );
				//var material = new THREE.MeshLambertMaterial( { color: 'rgb(255,0,0)', emissive: 0x200000 } );
				var material = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe:true } );
				cube = new THREE.Mesh( geometry, material);
				scene.add( cube );		
				//cubeShadow = new THREE.ShadowMesh( cube );
				//scene.add( cubeShadow );		
			}

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

			}

			function animate() {

				requestAnimationFrame( animate )

				renderer.render( scene, camera );

			}

			function keyDownHandler(event) {
				var step = 5;
				//key left
				if ( event.keyCode === 37) {
					// if barrier -> stop
					// if item -> update itemlist
					cube.position.x += -step;
					cube.position.y += 0;
					// camera moves
				}
				//key up
				else if( event.keyCode === 38 ) {
					cube.position.x += 0;
					cube.position.y += step;
				} 
				//key right
				else if ( event.keyCode === 39) {
					cube.position.x += step;
					cube.position.y += 0;
				}
				//key down
				else if ( event.keyCode === 40) {
					cube.position.x += 0;
					cube.position.y += -step;
				}
			}

		</script>

	</body>
</html>
